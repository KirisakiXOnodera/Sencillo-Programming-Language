lexeme 1: */			invalid operator
lexeme 2: sencillo			comment
lexeme 3: integer			id
lexeme 4: =			=
lexeme 5: 1			int_literal
lexeme 6: :			:
lexeme 7: doubler			id
lexeme 8: =			=
lexeme 9: 3.6			float_literal
lexeme 10: :			:
lexeme 11: string			id
lexeme 12: =			=
lexeme 13: title			str_literal
lexeme 14: :			:
lexeme 15: character			id
lexeme 16: =			=
lexeme 17: a			char_literal
lexeme 18: :			:
lexeme 19: Assignment Operators			comment
lexeme 20: =			=
lexeme 21: +=			+=
lexeme 22: -=			-=
lexeme 23: *=			*=
lexeme 24: /=			/=
lexeme 25: %=			%=
lexeme 26: //=			//=
lexeme 27: Unary Operators			comment
lexeme 28: ++			++
lexeme 29: --			--
lexeme 30: Arithmetic Operators			comment
lexeme 31: +			+
lexeme 32: -			-
lexeme 33: *			*
lexeme 34: /			/
lexeme 35: %			%
lexeme 36: **			**
lexeme 37: //			//
lexeme 38: Logical Operators			comment
lexeme 39: y			and_op
lexeme 40: ni			or_op
lexeme 41: no			not_op
lexeme 42: Boolean Relational Operators			comment
lexeme 43: ==			==
lexeme 44: !=			!=
lexeme 45: >			>
lexeme 46: <			<
lexeme 47: >=			>=
lexeme 48: <=			<=
lexeme 49: Key Words and Reserved Words			comment
lexeme 50: bool			boolean_keyword
lexeme 51: cuer			string_keyword
lexeme 52: dec			elif_keyword
lexeme 53: descanso			break_keyword
lexeme 54: doble			id
lexeme 55: ent			id
lexeme 56: escan			scanf_keyword
lexeme 57: flot			float_keyword
lexeme 58: hacer			do_keyword
lexeme 59: impri			printf_keyword
lexeme 60: mas			else_keyword
lexeme 61: mientras			while_keyword
lexeme 62: ni			or_op
lexeme 63: no			not_op
lexeme 64: perso			char_keyword
lexeme 65: por			for_keyword
lexeme 66: retorno			return_keyword
lexeme 67: sequir			continue_keyword
lexeme 68: si			if_keyword
lexeme 69: vacio			void_keyword
lexeme 70: vamos			goto_keyword
lexeme 71: y			and_op
lexeme 72: falso			false_reserved
lexeme 73: verdad			true_reserved
lexeme 74: Noise Words			comment
lexeme 75: booleano			boolean_noiseword
lexeme 76: decontra			elif_noiseword
lexeme 77: personaje			char_noiseword
lexeme 78: entero			integer_noiseword
lexeme 79: escanear			scanf_noiseword
lexeme 80: flotar			float_noiseword
lexeme 81: cuerda			string_noiseword
lexeme 82: imprimir			printf_noiseword
lexeme 83: sample comment			comment
lexeme 84: Delimeters			comment
lexeme 85: :			:
lexeme 86: (			(
lexeme 87: )			)
lexeme 88: [			[
lexeme 89: ]			]
lexeme 90: {			{
lexeme 91: }			}
lexeme 92: ,			,
lexeme 93: ;			;
