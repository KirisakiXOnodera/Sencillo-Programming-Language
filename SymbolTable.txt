Program: 

'(){}[];:,5$ @ name _name 14name name14 $name name_14 /**/ /*zz*/'' 'a' 'aaa' ' ' "" " " "a" 930232 34.34 0.3.0 2.2323.232 87634 345.4 = += -=  *=  /=  %=  //= ++ -- + - * / % ** //  == != > y ni no < >= <= bool cuer dec descanso doble ent escan flot hacer impri mas mientras ni no perso por retorno sequir si vacio vamos y falso verdad booleano decontra personaje entero escanear flotar cuerda imprimir' 

Lexeme : (	(
Lexeme : )	)
Lexeme : {	{
Lexeme : }	}
Lexeme : [	[
Lexeme : ]	]
Lexeme : ;	;
Lexeme : :	:
Lexeme : ,	,
Unknown input : 5$
Unknown input : @
Lexeme : name	identifier
Lexeme : _name	invalid identifier
Lexeme : 14name	invalid identifier
Lexeme : name14	identifier
Lexeme : $name	invalid identifier
Lexeme : name_14	identifier
Lexeme : 	comment
Lexeme : zz	comment
Lexeme : 	invalid char_literal
Lexeme : a	char_literal
Lexeme : aaa	invalid char_literal
Lexeme :  	char_literal
Lexeme : 	str_literal
Lexeme :  	str_literal
Lexeme : a	str_literal
Lexeme : 930232	int_literal
Lexeme : 34.34	float_literal
Lexeme : 0.3.0	invalid float_literal
Lexeme : 2.2323.232	invalid float_literal
Lexeme : 87634	int_literal
Lexeme : 345.4	float_literal
Lexeme : =	=
Lexeme : +=	+=
Lexeme : -=	-=
Lexeme : *=	*=
Lexeme : /=	/=
Lexeme : %=	%=
Lexeme : //=	//=
Lexeme : ++	++
Lexeme : --	--
Lexeme : +	+
Lexeme : -	-
Lexeme : *	*
Lexeme : /	/
Lexeme : %	%
Lexeme : **	**
Lexeme : //	//
Lexeme : ==	==
Lexeme : !=	!=
Lexeme : >	>
Lexeme : y	and_op
Lexeme : ni	or_op
Lexeme : no	not_op
Lexeme : <	<
Lexeme : >=	>=
Lexeme : <=	<=
Lexeme : bool	boolean_keyword
Lexeme : cuer	string_keyword
Lexeme : dec	elif_keyword
Lexeme : descanso	break_keyword
Lexeme : doble	double_keyword
Lexeme : ent	integer_keyword
Lexeme : escan	scanf_keyword
Lexeme : flot	float_keyword
Lexeme : hacer	do_keyword
Lexeme : impri	printf_keyword
Lexeme : mas	else_keyword
Lexeme : mientras	while_keyword
Lexeme : ni	or_op
Lexeme : no	not_op
Lexeme : perso	char_keyword
Lexeme : por	for_keyword
Lexeme : retorno	return_keyword
Lexeme : sequir	continue_keyword
Lexeme : si	if_keyword
Lexeme : vacio	void_keyword
Lexeme : vamos	goto_keyword
Lexeme : y	and_op
Lexeme : falso	false_reserved
Lexeme : verdad	true_reserved
Lexeme : booleano	boolean_noiseword
Lexeme : decontra	elif_noiseword
Lexeme : personaje	char_noiseword
Lexeme : entero	integer_noiseword
Lexeme : escanear	scanf_noiseword
Lexeme : flotar	float_noiseword
Lexeme : cuerda	string_noiseword
Lexeme : imprimir	printf_noiseword
